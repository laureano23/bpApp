<?php

namespace Mbp\ProduccionBundle\Entity;
use Mbp\ProduccionBundle\Entity\Programcion;

/**
 * ProgramacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProgramacionRepository extends \Doctrine\ORM\EntityRepository
{
	public function insertPrograma($decodeData)
	{
		$em = $this->getEntityManager();
		
		$fechaInicio = $decodeData->idProgramacion->fechaInicio;
		$fechaFin = $decodeData->idProgramacion->fechaFin;
						
		$inicio = \DateTime::CreateFromFormat('Y-m-d H:i:s:u', $fechaInicio); //LA u SON MICROSEGUNDOS
		$fin = \DateTime::CreateFromFormat('Y-m-d H:i:s:u', $fechaFin);
		
		$rec = $this->controlRecurso($decodeData->idMaquina, $inicio, $fin);
		
		//print_r($rec[0]->getId()); 
		echo count($rec);
						
		try{
			$itemProg = new Programacion();
			
			
			$repoMaquinas = $em->getRepository('MbpProduccionBundle:Maquinas');
			$repoFormula = $em->getRepository('MbpProduccionBundle:OperacionesFormula');
			
			$maquina = $repoMaquinas->findById($decodeData->idMaquina);
			$formulaOperacion = $repoFormula->findById($decodeData->id);
			
			
			$itemProg->setfechaInicio($inicio);
			$itemProg->setfechaFin($fin);
			$itemProg->setidRecursoMaquina($maquina[0]);
			$itemProg->setidOperacionFormula($formulaOperacion[0]);
			
			$em->persist($itemProg);
			$em->flush();	
			
			echo json_encode(array(
				'success' => true,
			));			
			
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());
		}
	}
	/*
	 * VERIFICA SI LA MAQUINA O RECURSO QUE SE QUIERE UTILIZAR
	 * ESTA DISPONIBLE EN LA FECHA SOLICITADA
	 * @idMaq | int
	 * @inicio | DateTime
	 * @fin | DateTime
	 */
	public function controlRecurso($idMaq, $inicio, $fin)
	{
		$em = $this->getEntityManager();
		$repoProgramacion = $em->getRepository('MbpProduccionBundle:Programacion');
		
		$dql = 'SELECT prog FROM MbpProduccionBundle:Programacion prog WHERE 
			prog.idRecursoMaquina = :idMaq AND
			prog.fechaInicio >= :inicio AND
			prog.fechaFin <= :fin';
		
		$query = $em->createQuery($dql);
		$query->setParameter('idMaq', $idMaq);
		$query->setParameter('inicio', $inicio);
		$query->setParameter('fin', $fin);
		
		$res = $query->getResult();
		
		return $res;
	}
}



















