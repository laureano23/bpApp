<?php

namespace Mbp\ProduccionBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Mbp\ProduccionBundle\Entity\Ot;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * OtRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OtRepository extends EntityRepository
{
	public function readOtPaneles()
	{
		$em = $this->getEntityManager();
		$connection = $em->getConnection();
		
		$sql = 'SELECT descripcion, ot, codigo, rsocial, cantidad, apoyoTapas, prof, ancho, idCodigo
				FROM Ot
				JOIN articulos
					on Ot.idCodigo = articulos.idArticulos 
				JOIN cliente
					on Ot.idCliente = cliente.idCliente
				JOIN CalculoRad
					on Ot.idCodigo = CalculoRad.cod
				';
		$statement = $connection->prepare($sql);
		
		$statement->execute();
		$res = $statement->fetchAll();
		//$rs = $em->createQuery($dql)->getArrayResult();
		echo json_encode($res);
		//print_r($res);
			
			
		
	}
	
    public function NewOtPanel($data)
    {
        $em = $this->getEntityManager();
		
		try{			
			/*
	         * Buscamos el objeto articulo que pasaremos a la ot
	         */
	        
	        $art = $em->getRepository('MbpArticulosBundle:Articulos')->find($data->{'idCodigo'});
			$cliente = $em->getRepository('MbpClientesBundle:Cliente')->find($data->{'idCliente'});
	        			 
	        $ot = new Ot();
	        
	        $ot->setidCodigo($art);
			$ot->setidCliente($cliente);
	        $ot->setcantidad($data->{'cantidad'});
	        
	        $em->persist($ot);
	        $em->flush();
			
			echo json_encode(array(
					'success' => true,					
				));
				        
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());	
		}		
    }
	
	public function verificaOt($ot)
	{
		$em = $this->getEntityManager();
		
		try{
			/*
			 * Buscamos si el panel tiene un calculo generado y la ot si ya fue guardada
			 */
			$ote = $em->getRepository('MbpProduccionBundle:Ot')->findByOt($ot);
			
			if($ote){
			    echo json_encode(array(
                    'success' => false,
                    'msg' => 'Atencion esta OT ya fue ingresada'
                ));
			}else{
				echo json_encode(array(
                    'success' => true,
                ));
			}			        
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());	
		}	
	}
	
	
	public function VerificaPanel($id)
	{
		$em = $this->getEntityManager();
		
		try{
			/*
			 * Buscamos si el panel tiene un calculo generado y la ot si ya fue guardada
			 */
			$calculo = $em->getRepository('MbpProduccionBundle:CalculoRad')->findByCod($id);
			
			if(!$calculo){
				echo json_encode(array(
					'success' => false,
					'msg' => 'Este panel no estÃ¡ calculado'
				));
			}else{
				echo json_encode(array(
					'success' => true,
				));
			}			        
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());	
		}	
	}
}
