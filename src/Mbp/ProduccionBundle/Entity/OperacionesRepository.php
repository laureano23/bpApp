<?php
namespace Mbp\ProduccionBundle\Entity;

use Mbp\ProduccionBundle\Entity\Operaciones;
use Mbp\FinanzasBundle\Entity\CentroCostos;

/**
 * OperacionesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OperacionesRepository extends \Doctrine\ORM\EntityRepository
{
	public function listarOperaciones()
	{
		$em = $this->getEntityManager();
	
		$dql = 'SELECT ope, centro FROM MbpProduccionBundle:Operaciones ope
				JOIN ope.centroCosto centro';
		
		try{
			$query = $em->createQuery($dql);
			$res = $query->getArrayResult();
			
			echo json_encode(array(
				'items' => $res,
				'success' => true
			));	
		}catch(\Doctrine\ORM\ORMException $e){
			$error = $this->get('logger')->error($e->getMessage());
			echo json_encode(array(
				'success' => false,
				'msg' => $error
			));		
		}
	}
	
	public function saveOperacion($data)
	{
		$info = json_decode($data);
		$em = $this->getEntityManager();
		//REPO OPERACIONES
		$repoOpe = $em->getRepository('MbpProduccionBundle:Operaciones');
		
		//SECTOR
		$dql = 'SELECT centro FROM MbpFinanzasBundle:CentroCostos centro
				WHERE centro.nombre = :desc';
		$query = $em->createQuery($dql)
			->setParameter('desc', $info->centroCosto);
		$res = $query->setMaxResults(1)->getOneOrNullResult();
		
		if($info->id > 0){
			//EDITA  OPERACION
			$operacion = $repoOpe->find($info->id);
			$operacion->setDescripcion($info->descripcion);
			$operacion->setCentroCosto($res);
			//PERSIST FLUSH
			$em->persist($operacion);
			$em->flush();
		}else{
			//NUEVA OPERACION
			$operacion = new Operaciones();			
			$operacion->setCentroCosto($res);
			$operacion->setDescripcion($info->descripcion);
			//PERSIST FLUSH
			$em->persist($operacion);
			$em->flush();
		}
		
		//RESPONSE
		echo json_encode(array(
			'success' => true,
			'items' => array(
				'id' => $operacion->getId(),
				'descripcion' => $operacion->getDescripcion(),
				'sector' => $res->getNombre()
			)
		));
	}

	public function listarPorSector($sector)
	{
		$em = $this->getEntityManager();
		//REPO OPERACIONES
		$repoOpe = $em->getRepository('MbpProduccionBundle:Operaciones');
		$repoCentros = $em->getRepository('MbpFinanzasBundle:CentroCostos');
		
		$centro = $repoCentros->findOneByNombre($sector);
		
		
		$query = $repoOpe->createQueryBuilder('o')
			->select("o.id as operacionId, CONCAT(o.codigo,' | ',o.descripcion) as descripcion")
			->where('o.centroCosto = :centro')
			->setParameter('centro', $centro)
			->orderBy('o.codigo', 'ASC')
			->getQuery()
			->getArrayResult();
		
		return $query;
	}
}








