<?php
namespace Mbp\ProduccionBundle\Entity;

use Mbp\ProduccionBundle\Entity\PedidoClientes;


/**
 * PedidoClientesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PedidoClientesRepository extends \Doctrine\ORM\EntityRepository
{
	//CARGA UN ARRAY DE ARTICULOS
	public function cargaPedidos($values)
	{
		try{
			$em = $this->getEntityManager();
						
			//BUSCO EL CLIENTE
			$clienteRepo = $em->getRepository('MbpClientesBundle:Cliente');
			$idCliente = $clienteRepo->findOneById($values[0]->cliente);
			
			foreach ($values as $val) {
				$pedido = new PedidoClientes();
								
				//BUSCO EL CODIGO
				$articulosRepo = $em->getRepository('MbpArticulosBundle:Articulos');
				$codigoArticulo = $articulosRepo->findOneByCodigo($val->codigo);				
				
				//OBJETO FECHA				
				$date = new \DateTime;
				$date = $date->createFromFormat('d/m/Y', $val->fechaProgramacion); //FECHA TIPO 01/02/2015
				
				$pedido->setCodigo($codigoArticulo);
				$pedido->setCantidad($val->cantidad);
				$pedido->setFechaProg($date);
				$pedido->setOc($val->oc);
				$pedido->setCliente($idCliente);
				
				$em->persist($pedido);
				$em->flush();
			}
			echo json_encode(array(
					'success' => true,
					'msg' => 'El pedido se cargÃ³ exitosamente'
				));
			
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());
			echo json_encode(array(
				'success' => false,
				'msg' => $e->getMessage()
			));
		}
	}
	
	public function listarPedidos()
	{
		try{
			$em = $this->getEntityManager();
			$repo = $em->getRepository('MbpProduccionBundle:PedidoClientes');
			$res = $repo->findAll();
			$info = array();
			
			for($i=0; $i<count($res); $i++){				
					$info[$i]['codigo'] = $res[$i]->getCodigo()->getCodigo();
					$info[$i]['descripcion'] = $res[$i]->getCodigo()->getDescripcion();
					$info[$i]['cantidad'] = $res[$i]->getCantidad();
					$info[$i]['clienteDesc'] = $res[$i]->getCliente()->getRsocial();
					$info[$i]['fechaProgramacion'] = $res[$i]->getFechaProg();				
			}
			
			echo json_encode($info);
			
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());
			echo json_encode(array(
				'success' => false,
				'msg' => $e->getMessage()
			));
		}
	}

	public function pedidosPorArticuloCliente($codigo, $idCliente)
	{
		$em = $this->getEntityManager();
		$repo = $em->getRepository('MbpProduccionBundle:PedidoClientes');

		$qb = $repo->createQueryBuilder('p')
			->select('p.oc, p.id as pedidoNum, art.codigo')
			->join('p.codigo', 'art')
			->where('art.codigo = :cod')
			->andWhere('p.cliente = :cliente')
			->setParameter('cliente' , $idCliente)
			->setParameter('cod' , $codigo)
			->getQuery()
			->getArrayResult();

		return $qb;

	}
}






















