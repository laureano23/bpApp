<?php

namespace Mbp\ArticulosBundle\Entity;
use Gedmo\Tree\Entity\Repository\ClosureTreeRepository;

/**
 * FormulasCRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FormulasCRepository extends \Gedmo\Tree\Entity\Repository\ClosureTreeRepository
{
	public function queryFormulaCompleta($nodo)
	{
		$em = $this->getEntityManager();
    	$repo=$em->getRepository('MbpArticulosBundle:FormulasC');
    	
    	$dql = "SELECT node.id, art.codigo, node.unidad
    			FROM Mbp\TestBundle\Entity\FormulasClosure c
    			INNER JOIN c.descendant node 
    			INNER JOIN node.idArt art
    			WHERE c.ancestor = :node AND c.descendant <> :node";

    	$qb = $em->createQuery($dql);
    	$qb->setParameter('node',$nodo);

    	return $qb->getArrayResult();

	}

    public function queryFormulaPrimerNivel($idArt){
        $em = $this->getEntityManager();
        $repo=$em->getRepository('MbpArticulosBundle:FormulasC');
        $repoArt=$em->getRepository('MbpArticulosBundle:Articulos');

        $node=$repo->findOneBy(['idArt' => $idArt, 'level' => 1]);
        
        $dql = "SELECT node.id as idFormula, art.codigo, art.id as idArt, node.unidad, art.descripcion, node.cantidad as cant, art.moneda
                FROM Mbp\ArticulosBundle\Entity\FormulasClosure c
                INNER JOIN c.descendant node 
                INNER JOIN node.idArt art
                WHERE c.ancestor = :node AND c.descendant <> :node
                AND node.level=2";

        $qb = $em->createQuery($dql);
        $qb->setParameter('node',$node);

        return $qb->getArrayResult();        
    }

}
