<?php

namespace Mbp\ProveedoresBundle\Entity;

/**
 * PagoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PagoRepository extends \Doctrine\ORM\EntityRepository
{
	public function listarPagos($idProv)
	{
		$em = $this->getEntityManager();
		$repo = $em->getRepository('MbpProveedoresBundle:OrdenPago');
		
		
		try{
			$qb = $repo->createQueryBuilder('op');
			$query = $qb->select('')
					->where('op.proveedorId = :idProv')
					->join('op.pagoDetalleId', 'pago')
					->setParameter('idProv',$idProv)
					->getQuery();
			$res = $query->getResult();
			
			if(empty($res)){return;}
			
			$resp = array();
			$i=0;
			foreach ($res as $rec) {
				$resp[$i]['idOP'] = $rec->getId();
				$resp[$i]['fechaEmision'] = $rec->getEmision()->format('d-m-Y H:i:s');
				$resp[$i]['concepto'] = "ORDEN DE PAGO ".$rec->getId();
				$resp[$i]['vencimiento'] = $rec->getEmision()->format('d/m/Y');
				$resp[$i]['debe'] = $this->getTotalPago($rec);
				$resp[$i]['haber'] = 0;
				$resp[$i]['detalle'] = true;
				$i++;
			}
						
			return $resp;
		}catch(Exception $e){
			echo json_encode(array(
				'success' => false,
				'msg' => $e->getMessage()
			));
		}
	}
	
	/*
	 * Funcion para obtener el total de un pago a proveedor
	 * @param: array de objetos pago
	 * */
	public function getTotalPago($pago)
	{
		$total=0;
		foreach ($pago->getPagoDetalleId() as $rec) {
			$total = $total + $rec->getImporte();
		}		
		return $total;
	}	
}
