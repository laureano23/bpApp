<?php

namespace Mbp\ComprasBundle\Entity;

/**
 * OrdenCompraRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrdenCompraRepository extends \Doctrine\ORM\EntityRepository
{
	//NUEVA ORDEN DE COMPRA
	public function nuevaOC($detalleData, $ordenData, $usuario)
	{
		$em = $this->getEntityManager();
		$repoArt = $em->getRepository('MbpArticulosBundle:Articulos');
		$repoProv = $em->getRepository('MbpProveedoresBundle:Proveedor');
		$repoParametros = $em->getRepository('MbpFinanzasBundle:ParametrosFinanzas');
		$tc = $repoParametros->find(1)->getDolarOficial();
		
					
		
		$orden = new OrdenCompra();		
		$detalle;
		$fechaEntrega;
		
		
		foreach ($detalleData as $det) {
			$detalle = new OrdenCompraDetalle();
			//BUSCO ARTICULO
			$articulo = $repoArt->find($det->id);
			//FECHA DE ENTREGA
			$det->entrega == "" ? $fechaEntrega = new \DateTime : $fechaEntrega = \DateTime::createFromFormat('d/m/Y', $det->entrega);
			//CARGO DATOS DEL DETALLE DE OC			
			$detalle->setArticuloId($articulo);
			$detalle->setUnidad($det->unidad);
			$detalle->setPrecio($det->costo);
			$detalle->setCant($det->cant);
			$detalle->setFechaEntrega($fechaEntrega);
			$detalle->setIva($det->iva);
			$det->iva == 21 ? $detalle->setIvaCalculado($det->cant * $det->costo * 0.21) : $detalle->setIvaCalculado($det->cant * $det->costo * 0.105); 
			$det->moneda == 'p' ? $detalle->setMoneda(0) : $detalle->setMoneda(1);

			//ACTUALIZO EL COSTO DEL ARTICULO SI ES NECESARIO
			if($det->actCosto == true){
				if($articulo->getMoneda() == 1 && $det->moneda == "d"){
					$articulo->setCosto($det->costo);
				}
				elseif($articulo->getMoneda() == 0 && $det->moneda == "d"){
					$articulo->setCosto($det->costo * $tc);
				}
				elseif($articulo->getMoneda() == 1 && $det->moneda == "p"){
					$articulo->setCosto($det->costo / $tc);
				}else{
					$articulo->setCosto($det->costo);
				}
			}
			$em->persist($articulo);
			
			$orden->addOrdenDetalleId($detalle);
		}
		
		//BUSCO PROVEEDOR
		$proveedor = $repoProv->find($ordenData->id);
		$orden->setProveedorId($proveedor);
		$orden->setUsuario($usuario);
		$orden->setFechaEmision(new \DateTime);
		$ordenData->monedaOC == "ARS" ? $orden->setMonedaOC(0) : $orden->setMonedaOC(1);
		$ordenData->monedaOC == "U\$D" ? $orden->setTc($ordenData->tc) : $orden->setTc($tc);  
		$orden->setCondicionCompra($ordenData->condCompra);
		$orden->setLugarEntrega($ordenData->lugar);
		$orden->setObservaciones($ordenData->observaciones);
		$orden->setDescuentoGral($ordenData->descuentoGral);
		
		
		
		$em->persist($orden);
		$em->flush();
	}
}
