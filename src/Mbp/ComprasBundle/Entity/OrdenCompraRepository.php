<?php

namespace Mbp\ComprasBundle\Entity;

/**
 * OrdenCompraRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrdenCompraRepository extends \Doctrine\ORM\EntityRepository
{
	/* LISTA SEGUN UN CODIGO DE ARTICULO LAS ORDENES DE COMPRA PENDIENTES */
	public function articulosPendientesIngreso($codigoArt)
	{
		$em = $this->getEntityManager();
		$rep = $em->getRepository('MbpComprasBundle:OrdenCompra');
		$repArt = $em->getRepository('MbpArticulosBundle:Articulos');
		
		$art = $repArt->findOneByCodigo($codigoArt);	
		
		if(empty($art)) throw new \Exception("ArtÃ­culo no encontrado", 1);
		$idArt=$art->getId();

		$sql="
			select sub.*, detMov.cantidad as ingresado, sub.articuloId,
				sum(detMov.cantidad) as ingresado,
			    sub.totalComprado - sum(ifnull(detMov.cantidad,0)) as pendiente
			from
				(select oc.id as idOc, SUM(detalleOrden.cant) as totalComprado, detalleOrden.articuloId, detalleOrden.fechaEntrega as entrega 
				from
					OrdenCompraDetalle as detalleOrden
					inner join ordenCompra_detallesOrdenCompra oc_det on oc_det.ordencompradetalle_id = detalleOrden.id
					left join OrdenCompra oc on oc.id = oc_det.orden_id 
				where detalleOrden.articuloId=$idArt
			    group by oc.id) as sub
			left join DetalleMovArt detMov on detMov.ordenCompraId=sub.idOc and detMov.articuloId = sub.articuloId
			group by sub.idOc
			having pendiente > 0
		";

		$stmt = $em->getConnection()->prepare($sql);
        $stmt->execute();
        $res= $stmt->fetchAll(); 
		
		return $res;
	}
	
}
