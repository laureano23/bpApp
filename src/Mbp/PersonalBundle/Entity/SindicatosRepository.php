<?php

namespace Mbp\PersonalBundle\Entity;

/**
 * SindicatosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SindicatosRepository extends \Doctrine\ORM\EntityRepository
{
	public function listarSindicatos()
	{
		$em = $this->getEntityManager();
		
		try{
			$dql = 'SELECT sind FROM MbpPersonalBundle:Sindicatos sind
					WHERE sind.inactivo = 0';
			$query = $em->createQuery($dql);
			$res = $query->getArrayResult();
			
			$rec = array();
			$i=0;
			foreach($res as $reg){
				$rec[$i] = $reg;
				$rec[$i]['idSindicato'] = $reg['id'];
				unset($rec[$i]['id']);
				$i++;
			}
			
			$jsonRes = json_encode(array(
				'items' => $rec
			));
			
			echo $jsonRes;	
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());
		}
	}
	
	/*
	 * @param	| json object
	 * return	| json msg
	 */
	public function crearSindicato($jsonData)
	{
		$em = $this->getEntityManager();
		
		try{
			$obj = new Sindicatos();
				
			$obj->setSindicato($jsonData->sindicato);	
			$em->persist($obj);
			$em->flush();
			
			echo json_encode(array(
				'success' => true,
				'items' => array(
					'idSindicato' => $obj->getId(),
					'sindicato' => $jsonData->sindicato
				)				
			));
			
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());
		}		
	}
	
	/*
	 * @param	| json object
	 * return	| json msg
	 */
	public function updateSindicato($jsonData)
	{
		$em = $this->getEntityManager();
		
		try{
			$repo = $em->getRepository('MbpPersonalBundle:Sindicatos');
			
			$obj = $repo->find($jsonData->id);			
				
			$obj->setSindicato($jsonData->sindicato);	
			$em->persist($obj);
			$em->flush();
			
			echo json_encode(array(
				'success' => true,
				'items' => array(
					'idSindicato' => $obj->getId(),
					'sindicato' => $jsonData->sindicato
				)				
			));
			
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());
		}		
	}
	
	/*
	 * @id	| integer
	 * return	| json msg
	 */
	public function borrarSindicato($id)
	{
		$em = $this->getEntityManager();
		
		try{
			$repo = $em->getRepository('MbpPersonalBundle:Sindicatos');
			
			$obj = $repo->find($id);			
			$obj->setInactivo(true);
			$em->persist($obj);
			$em->flush();
			
			echo json_encode(array(
				'success' => true
			));
			
		}catch(\Doctrine\ORM\ORMException $e){
			$this->get('logger')->error($e->getMessage());
		}		
	}
}
